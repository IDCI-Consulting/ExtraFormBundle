{%- block extra_form_collection_widget -%}
    {{- form_widget(form) -}}
    <script type="text/javascript">
        function getJquery(callback) {
            if (!window.jQuery) {
                if (!document.getElementById('idci_jquery')) {
                    var sJquery = document.createElement('script');
                    sJquery.id = 'idci_jquery';
                    sJquery.src = '{{ asset('bundles/idciextraform/js/jquery-1.11.3.min.js') }}';
                    sJquery.type = 'text/javascript';

                    var head = document.getElementsByTagName('head')[0];
                    head.appendChild(sJquery);
                } else {
                    var sJquery = document.getElementById('idci_jquery');
                }

                var onload = sJquery.onload;
                sJquery.onload = sJquery.onreadystatechange = function() {
                    if (typeof onload == 'function') {
                        onload();
                    }
                    callback(window.jQuery);
                }
            } else {
                callback(window.jQuery);
            }
        }

        getJquery(function($) {
            var collectionItemPrototype = '{{ form_row(prototype)|e('js') }}';
            var $div = $('#{{ form.vars.id }}');
            var $directCollection = $div.find('[data-collection-id={{ form.vars.collection_id }}]').filter(function () {
                return $(this).attr('id') == $div.attr('id')+'_'+$(this).data('position');
            });
            var minItems = {{ form.vars.min_items }};
            var maxItems = {{ form.vars.max_items }};
            var countActionable = 0;
            var hasRemovedButtons = false;

            var getItemContainer = function(item) {
                var itemContainer;
                $div.children().each(function() {
                    if ($(this).find(item).length !== 0) {
                        itemContainer = $(this);
                    }
                });

                return itemContainer;
            };

            var showItem = function(item, $parentRequired) {
                item.attr('data-display', 'show');
                if ($parentRequired) {
                    item.find('input').prop('required', 'required');
                }
                // Uncheck remove input
                item
                    .find('.idci_collection_item_remove')
                    .prop('required', false)
                    .prop('checked', false)
                    .attr('checked', false)
                ;
                getItemContainer(item).show();
                countActionable--;
            };

            var hideItem = function(item) {
                item.attr('data-display', 'hide');
                item.find('input').prop('required', false);
                // Check remove input
                item
                    .find('.idci_collection_item_remove')
                    .prop('checked', true)
                    .attr('checked', true)
                ;
                getItemContainer(item).hide().insertBefore($addButton);
                countActionable++;
            };

            var hideRemoveCheckbox = function(item) {
                var $removeCheckbox = item.find('.idci_collection_item_remove');
                $removeCheckbox.attr('style', 'display:none;');
                getItemContainer(item)
                    .find('label[for='+$removeCheckbox.attr('id')+']')
                    .attr('style', 'display:none;')
                ;
            };

            var addRemoveButtons = function() {
                if (hasRemovedButtons) {
                    return;
                }

                $directCollection.each(function(index) {
                    var $removeButton = $('<button{%- for attrname, attrvalue in remove_button.attr %} {{ attrname }}="{{ attrvalue }}"{%- endfor -%}>{{ remove_button.label|trans }}</button>');
                    $removeButton.on('click', function(event) {
                        event.preventDefault();
                        var $toDeleteItem = $(this).siblings('[data-collection-id={{ form.vars.collection_id }}][data-display]');

                        // Replace the 'to delete item' with the prototype.
                        var $toAdd = $(collectionItemPrototype.replace(
                            /__collection_item_prototype__/g,
                            $toDeleteItem.attr('data-position')
                        ));

                        var $toAddItem = $toAdd.find('[data-display=prototype]');

                        $toAddItem
                            .attr('data-display', 'show')
                            .attr('data-position', $toDeleteItem.attr('data-position'))
                        ;
                        getItemContainer($toDeleteItem).replaceWith($toAdd);
                        hideItem($toAddItem);

                        init();
                    });
                    if (0 !== index) {
                        $(this).after($removeButton);
                    }
                });
                hasRemovedButtons = true;
            };

            var removeRemoveButtons = function() {
                if (!hasRemovedButtons) {
                    return;
                }
                $directCollection.each(function() {
                    $(this).siblings('button').remove();
                });
                hasRemovedButtons = false;
            };

            var init = function() {
                if (countActionable > 0) {
                    $addButton.prop('disabled', false).removeClass('disabled').addClass('success');
                } else {
                    $addButton.prop('disabled', true).removeClass('success').addClass('disabled');
                }
                removeRemoveButtons();
                if (maxItems - countActionable > minItems) {
                    addRemoveButtons();
                }
            };

            // Initialize the add button.
            var $addButton = $('<button{%- for attrname, attrvalue in add_button.attr %} {{ attrname }}="{{ attrvalue }}"{%- endfor -%}>{{ add_button.label|trans }}</button>');
            $addButton.on('click', function(event) {
                event.preventDefault();
                if (countActionable > 0) {
                    var $parent = $(this).parent();
                    var $parentRequired = $parent.find('[data-collection-id={{ form.vars.collection_id }}][data-display=show]').filter(function () {
                        return $(this).attr('id') == $parent.attr('id')+'_'+$(this).data('position');
                    }).first().find('input').prop('required');
                    var $toShow = $parent.find('[data-collection-id={{ form.vars.collection_id }}][data-display=hide]').filter(function () {
                        return $(this).attr('id') == $parent.attr('id')+'_'+$(this).data('position');
                    }).first();

                    showItem($toShow, $parentRequired);
                    hideRemoveCheckbox($toShow);
                    init();
                }
            });
            $div.append($addButton);

            // Initialize the collection.
            $directCollection.each(function() {
                hideRemoveCheckbox($(this));
                if ($(this).data('display') == 'hide') {
                    hideItem($(this));
                }
            });
            init();
        });
    </script>
{%- endblock extra_form_collection_widget -%}

{%- block extra_form_iban_text_row -%}
    <div style="display:inline-block">{{- form_widget(form) -}}</div>
{%- endblock extra_form_iban_text_row -%}

{%- block extra_form_html_row -%}
    {{- form_widget(form) -}}
{%- endblock extra_form_html_row -%}

{%- block extra_form_html_widget -%}
    <div{% for attrname, attrvalue in attr %} {{ attrname }}="{{ attrvalue }}"{% endfor %}>{{- content | raw -}}</div>
{%- endblock extra_form_html_widget -%}

{%- block extra_form_range_widget -%}
    {% set type = type|default('range') %}
    {{- block('form_widget_simple') -}}
{%- endblock extra_form_range_widget %}

{%- block extra_form_tags_widget -%}
    <div class="extra-form-tags">
        {{- form_widget(form) -}}
        <div class="tags_box" id="tags_{{ form.vars.id }}"></div>
    </div>

    <script type="text/javascript">
        window.addEventListener('load', function () {
            var formId = '{{ form.vars.id }}';
            var separator = '{{ form.vars.separator }}';
            var textarea = document.getElementById(formId);
            var tags = [];

            if (textarea.value !== '') {
                tags = textarea.value.split(separator);
            }

            var updateTags = function () {
                var taggleTags = taggle.getTags();
                textarea.value = taggleTags.values.join(separator);
            };

            textarea.style.display = 'none';

            var taggle = new Taggle('tags_' + formId, {
                tags: tags,
                onTagAdd: updateTags,
                onTagRemove: updateTags
            });

            {% if form.vars.url is defined %}
                var container = taggle.getContainer();
                var input = taggle.getInput();
                var request = $.ajax({
                    url: '{{ form.vars.url }}',
                    method: 'GET'
                });

                var formatTags = {{ form.vars.jsTransformFunction }};

                request.done(function (tags) {
                    $(input).autocomplete({
                        source: formatTags(tags),
                        appendTo: container,
                        position: { at: 'left bottom', of: container },
                        select: function(event, data) {
                            event.preventDefault();
                            //Add the tag if user clicks
                            if (event.which === 1) {
                                taggle.add(data.item.value);
                            }
                        }
                    });
                });
            {% endif %}
        });

        if (typeof Taggle !== 'function') {
            document.write(
                '<script type="text/javascript" src="{{ asset('bundles/idciextraform/js/vendor/taggle.js') }}"><\/script>' +
                '<link rel="stylesheet" type="text/css" href="{{ asset('bundles/idciextraform/css/taggle.css') }}" />'
            );
        }
    </script>
{%- endblock extra_form_tags_widget -%}
