{%- block extra_form_collection_widget -%}
    {{- form_widget(form) -}}
    <script type="text/javascript">
        function getJquery(callback) {
            if (!window.jQuery) {
                var sJquery = document.createElement("script");
                sJquery.src = "{{ asset('bundles/idciextraform/js/jquery-1.11.3.min.js') }}";
                sJquery.type = "text/javascript";

                var head = document.getElementsByTagName('head')[0];
                head.parentNode.insertBefore(sJquery, head);

                sJquery.onload = sJquery.onreadystatechange = function() {
                    callback(window.jQuery);
                }
            } else {
                callback(window.jQuery);
            }
        };

        getJquery(function($) {
            var $div = $('#{{ form.vars.id }}');
            var $items = $div.find('[data-collection-id={{ form.vars.collection_id }}]');
            var minItems = {{ form.vars.min_items }};
            var maxItems = {{ form.vars.max_items }};
            var countActionable = 0;
            var hasRemovedButtons = false;

            var getItemContainer = function(item) {
                var itemContainer;

                $div.children().each(function() {
                    if ($(this).find(item).length !== 0) {
                        itemContainer = $(this);
                    }
                });

                return itemContainer;
            };

            var showItem = function(item) {
                item.attr('data-display', 'show');

                $(':disabled', item)
                    .each(function(i,e) {
                        $(e)
                            .prop('disabled', false)
                        ;
                    })
                ;

                getItemContainer(item).show();
                countActionable--;
            };

            var hideItem = function(item) {
                item.attr('data-display', 'hide');

                $(':input', item)
                    .not(':button, :submit, :reset, :hidden')
                    .each(function(i,e) {
                        $(e).val($(e).attr('value') || '')
                            .prop('checked',  false)
                            .prop('selected', false)
                            .prop('disabled', true)
                            .trigger('change')
                        ;
                    })
                ;
                $('option[selected]', item).prop('selected', true);
                $('input[checked]',   item).prop('checked',  true);
                $('textarea',         item).each(function(i,e) { $(e).val($(e).html()) });

                getItemContainer(item).hide().insertBefore($addButton);
                countActionable++;
            };

            var addRemoveButton = function() {
                if (hasRemovedButtons) {
                    return;
                }

                $items.each(function() {
                    var $removeButton = $('<button{%- for attrname, attrvalue in remove_button.attr %} {{ attrname }}="{{ attrvalue }}"{%- endfor -%}>{{ remove_button.label|trans }}</button>');
                    $removeButton.on('click', function(event) {
                        event.preventDefault();
                        hideItem($(this).siblings('[data-collection-id={{ form.vars.collection_id }}][data-display]'));
                        initAddButton();
                    });
                    $(this).after($removeButton);
                });
                hasRemovedButtons = true;
            };

            var removeRemoveButton = function() {
                if (!hasRemovedButtons) {
                    return;
                }

                $items.each(function() {
                    $(this).siblings('button').remove();
                });
                hasRemovedButtons = false;
            };

            var $addButton = $('<button{%- for attrname, attrvalue in add_button.attr %} {{ attrname }}="{{ attrvalue }}"{%- endfor -%}>{{ add_button.label|trans }}</button>');
            $addButton.on('click', function(event) {
                event.preventDefault();
                if (countActionable > 0) {
                    showItem($div.find('[data-collection-id={{ form.vars.collection_id }}][data-display="hide"]').first());
                    initAddButton();
                }
            });

            var initAddButton = function() {
                if (countActionable > 0) {
                    $addButton.prop('disabled', false).removeClass('disabled').addClass('success');
                } else {
                    $addButton.prop('disabled', true).removeClass('success').addClass('disabled');
                }

                if (maxItems - countActionable > minItems) {
                    addRemoveButton();
                } else {
                    removeRemoveButton();
                }
            };

            // INIT
            $div.append($addButton);
            $items.each(function() {
                if ($(this).data('display') == 'hide') {
                    hideItem($(this));
                }
            });
            initAddButton();
        });
    </script>
{%- endblock extra_form_collection_widget -%}


{%- block extra_form_iban_text_row -%}
    <div style="display:inline-block">
        {{- form_widget(form) -}}
    </div>
{%- endblock extra_form_iban_text_row -%}


{%- block extra_form_html_row -%}
    {{- form_widget(form) -}}
{%- endblock extra_form_html_row -%}
{%- block extra_form_html_widget -%}
    <div{% for attrname, attrvalue in attr %} {{ attrname }}="{{ attrvalue }}"{% endfor %}>
        {{- content | raw -}}
    </div>
{%- endblock extra_form_html_widget -%}


{%- block extra_form_editor_widget -%}
    <div data-ng-app="editorApp" data-ng-controller="editorController">
        {{- form_widget(form) -}}
        {% if not form.vars['disabled_editor'] %}
        <div id="extraform-editor">
            <div class="extraform-field" id="extraform-field-{{ '{{ fieldIndex }}' }}" data-ng-repeat="(fieldIndex, field) in fields">
                <div>
                    <label>{% trans %}Name{% endtrans %}:</label>
                    <input type="text" data-ng-model="field.name" />

                    <label>{% trans %}Type{% endtrans %}:</label>
                    <select data-ng-model="field.extra_form_type">
                        <option data-ng-repeat="(name, item) in extraformTypes" data-ng-selected="name == field.extra_form_type" data-ng-if="item.abstract == false" value="{{ '{{ name }}' }}">{{ '{{ name }} [{{ item.description }}]' }}</option>
                    </select>
                </div>

                <div>
                    <label data-ng-init="showOptions[fieldIndex] = false" data-ng-click="showOptions[fieldIndex] = !showOptions[fieldIndex]">{% trans %}Options{% endtrans %}:</label>
                    <div class="extraform-field-options" data-ng-show="showOptions[fieldIndex]"></div>
                </div>

                <div>
                    <label data-ng-init="showConstraints[fieldIndex] = false" data-ng-click="showConstraints[fieldIndex] = !showConstraints[fieldIndex]">{% trans %}Constraints{% endtrans %}:</label>
                    <div class="extraform-field-constraints" data-ng-show="showConstraints[fieldIndex]">
                        <div data-ng-repeat="(constraintIndex, constraint) in field.constraints">
                            <div class="extraform-field-constraint">
                                <select data-ng-model="constraint.extra_form_constraint">
                                    <option data-ng-repeat="(name, item) in extraformConstraints" data-ng-selected="name == constraint.extra_form_constraint" value="{{ '{{ name }}' }}">{{ '{{ name }}' }}</option>
                                </select>

                                <button data-ng-click="removeConstraint($event, fieldIndex, constraintIndex)">x</button>
                            </div>
                        </div>
                        <select data-ng-model="newExtraformConstraint.fields[fieldIndex]" data-ng-init="newExtraformConstraint.fields[fieldIndex] = newExtraformConstraint.default">
                            <option data-ng-repeat="(name, constraint) in extraformConstraints" data-ng-selected="name == newExtraformConstraint.default" value="{{ '{{ name }}' }}">{{ '{{ name }}' }}</option>
                        </select>
                        <button data-ng-click="addConstraint($event, fieldIndex)">Add constraint</button>
                    </div>
                </div>

                <button data-ng-click="removeField($event, fieldIndex)">x</button>
            </div>
        </div>
        <select data-ng-model="newExtraformField">
            <option data-ng-repeat="(name, type) in extraformTypes" data-ng-selected="name == newExtraformField" data-ng-if="type.abstract == false" value="{{ '{{ name }}' }}">{{ '{{ name }} [{{ type.description }}]' }}</option>
        </select>
        <button data-ng-click="addField($event)">Add field</button>
        {% endif %}
    </div>
    <script type="text/javascript" src="{{ asset('bundles/idciextraform/angular-1.3.16/angular.min.js') }}"></script>
    <script type="text/javascript" src="{{ asset('bundles/idciextraform/editor/editorApp.js') }}"></script>
{%- endblock extra_form_editor_widget -%}